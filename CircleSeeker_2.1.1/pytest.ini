[pytest]
# Minimum pytest version
minversion = 7.0

# Python path configuration
pythonpath = src

# Test discovery patterns
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Test paths
testpaths = tests

# Output options
addopts = 
    # Verbose and extra summary
    -v
    -ra
    # Strict markers
    --strict-markers
    # Show local variables in tracebacks
    --showlocals
    # Fail on warnings
    --strict-config
    # Disable capturing to show prints
    --capture=no

# Custom markers
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    unit: marks tests as unit tests  
    external: marks tests that require external tools
    skipif_no_tidehunter: skip if tidehunter is not available
    skipif_no_blast: skip if blast is not available
    skipif_no_minimap2: skip if minimap2 is not available
    skipif_no_cyrcular: skip if cyrcular is not available
    skipif_no_varlociraptor: skip if varlociraptor is not available

# Coverage configuration
[coverage:run]
source = circleseeker
omit = 
    */tests/*
    */test_*.py
    */__init__.py
    */setup.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    @abstractmethod
    
precision = 2
show_missing = True
skip_covered = False

[coverage:html]
directory = htmlcov

[coverage:xml]
output = coverage.xml
